<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Medium on Rezy Dev</title>
    <link>http://localhost:1313/tags/medium/</link>
    <description>Recent content in Medium on Rezy Dev</description>
    <image>
      <title>Rezy Dev</title>
      <url>http://localhost:1313/logo.png</url>
      <link>http://localhost:1313/logo.png</link>
    </image>
    <generator>Hugo -- 0.147.0</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Oct 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/medium/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Blurry Writeup - HackTheBox</title>
      <link>http://localhost:1313/writeups/hackthebox/blurry/</link>
      <pubDate>Sun, 13 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/writeups/hackthebox/blurry/</guid>
      <description>Blurry is a medium-difficulty Linux machine that features DevOps-related vectors surrounding machine learning. The foothold is comprised of a series of CVEs recently disclosed about the ClearML suite. The service provides a web platform, a fileserver, and an API; all of which contain vulnerabilities ([CVE-2024-24590](https://nvd.nist.gov/vuln/detail/CVE-2024-24590) - [CVE-2024-24595](https://nvd.nist.gov/vuln/detail/CVE-2024-24595)) that can be chained together for remote code execution. Once a shell on the target is obtained, a program that can be run with sudo is discovered. The program loads arbitrary PyTorch models to evaluate them against a protected dataset. While it is known that such models are susceptible to insecure deserialization, fickling is used to scan the dataset for insecure pickle files, prior to loading the model. Malicious code can be injected into a model, using runpy to bypass the fickling checks.</description>
    </item>
    <item>
      <title>SolarLab Writeup - HackTheBox</title>
      <link>http://localhost:1313/writeups/hackthebox/solarlab/</link>
      <pubDate>Tue, 24 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/writeups/hackthebox/solarlab/</guid>
      <description>SolarLab is a medium Windows machine that starts with a webpage featuring a business site. Moreover, an SMB share is accessible using a guest session that holds files with sensitive information for users on the remote machine. An attacker can extract valid credentials from this file and log in to a page allowing employees to fill out forms for company purposes. These forms are turned into PDFs using the ReportLab library, which is vulnerable to [CVE-2023-33733](https://nvd.nist.gov/vuln/detail/CVE-2023-33733). After some exploit development/modification, the attacker can get code execution as the user blake on the remote machine. Further enumeration of the remote machine reveals that Openfire is installed and running locally. By using a SOCKS tunnel, the attacker can access the Administrator Console for Openfire. It turns out that the version installed is vulnerable to [CVE-2023-32315](https://nvd.nist.gov/vuln/detail/CVE-2023-32315), which allows the attacker to bypass the authentication screen, upload a malicious plugin, and get code execution as the openfire user. The openfire user can read the logs from when the server was installed and extract all the necessary information to crack the Administrator&amp;#39;s password, and it turns out that this password is reused for the local Administrator account.</description>
    </item>
  </channel>
</rss>
